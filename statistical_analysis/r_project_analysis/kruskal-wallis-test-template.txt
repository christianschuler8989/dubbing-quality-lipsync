
identifier = "Modification"
sink_path <- paste0("kruskal-wallis/", identifier, ".txt")

#### Kruskal-Wallis ############################################################
################################################################################
# Kruskal-Wallis test is a non-parametric alternative to the one-way ANOVA test.
# It extends the two-samples Wilcoxon test in the situation where there are more
# than two groups to compare. It’s recommended when the assumptions of one-way
# ANOVA test are not met.

#### Kruskal-Wallis test  ######################################################
#### Data preparation
data <- data_done %>% dplyr::filter((Modification != "uR") & (Modification != "iL")) %>% # Excluding Mid- and Low- Anchors
  select(Excerpt, Object, Modification, Attribute,
         Grade, Rank, Runtime, SubjectName)  

data %>% sample_n_by(Modification, size = 1)

#### Summary statistics
summary_statistics <- data %>% 
  group_by(Modification) %>%
  get_summary_stats(Rank, type = "common")
sink(sink_path, append = FALSE)
print("Summary Statistics")
summary_statistics
sink()

#### Visualization
ggboxplot(data, x = "Modification", y = "Rank", palette = "jco")

#### Computation
## Question: We want to know if there is any significant difference between the
##   average Ranks of modifications in the 3 experimental conditions.
res.kruskal <- data %>% kruskal_test(Rank ~ Modification)
sink(sink_path, append = TRUE)
print("Kruskal Computation")
res.kruskal
sink()

#### Effect size
## The eta squared, based on the H-statistic, can be used as the measure of the
##   Kruskal-Wallis test effect size. It is calculated as follow : 
##   eta2[H] = (H - k + 1)/(n - k); where H is the value obtained in the
##   Kruskal-Wallis test; k is the number of groups; n is the total number of
##   observations (M. T. Tomczak and Tomczak 2014).
##
## The eta-squared estimate assumes values from 0 to 1 and multiplied by 100
##   indicates the percentage of variance in the dependent variable explained by
##   the independent variable.
##
## The interpretation values commonly in published literature are: 0.01- < 0.06
##   (small effect), 0.06 - < 0.14 (moderate effect) and >= 0.14 (large effect).
kruskal_effectsize <- data %>% kruskal_effsize(Rank ~ Modification)
sink(sink_path, append = TRUE)
print("Kruskal Effect Size")
kruskal_effectsize
sink()

#### Multiple pairwise-comparisons
## From the output of the Kruskal-Wallis test, we know that there is a
## significant difference between groups, but we don’t know which pairs of
## groups are different.
##
## A significant Kruskal-Wallis test is generally followed up by Dunn’s test to
##   identify which groups are different. It’s also possible to use the
##   Wilcoxon’s test to calculate pairwise comparisons between group levels with
##   corrections for multiple testing.
##
## Compared to the Wilcoxon’s test, the Dunn’s test takes into account the
##   rankings used by the Kruskal-Wallis test. It also does ties adjustments.

#### Pairwise comparisons using Dunn’s test:
pwc_dunn <- data %>% 
  dunn_test(Rank ~ Modification, p.adjust.method = "bonferroni") 
sink(sink_path, append = TRUE)
print("Pairwise Comparisons Dunn Test")
pwc_dunn
sink()

#### Pairwise comparisons using Wilcoxon’s test:
pwc_wilcox <- data %>% 
  wilcox_test(Rank ~ Modification, p.adjust.method = "bonferroni")
sink(sink_path, append = TRUE)
print("Pairwise Comparisons Wilcox Test")
pwc_wilcox
sink()

#### Report
## IN EXAMPLES ONLINE:
## There was a statistically significant differences between treatment groups as
##   assessed using the Kruskal-Wallis test (p = 0.018). Pairwise Wilcoxon test
##   between groups showed that only the difference between trt1 and trt2 group
##   was significant (Wilcoxon’s test, p = 0.027)
# Visualization: box plots with p-values
# For Dunn test
pwc_dunn <- pwc_dunn %>% add_xy_position(x = "Modification")
ggboxplot(data, x = "Modification", y = "Rank") +
  stat_pvalue_manual(pwc_dunn, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc_dunn)
  )
# For Wilcox test
pwc_wilcox <- pwc_wilcox %>% add_xy_position(x = "Modification")
ggboxplot(data, x = "Modification", y = "Rank") +
  stat_pvalue_manual(pwc_wilcox, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc_wilcox)
  )
