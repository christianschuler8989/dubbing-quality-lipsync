#### Barely shit ####
gg <- ggplot(data_combined, aes(x = Rank, y = Count, color = identifier)) +
geom_point() +
labs(title = "Scatterplot", x = "Rank", y = "Count")
#### Theme adding
gg1 <- gg + theme(plot.title = element_text(size = 30, face = "bold"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25)) +
scale_color_discrete((name = "Type of PVS"))
#scale_x_discrete(breaks = c("1", "2", "3", "4", "5", "6"))
#scale_x_discrete(limits = c("1", "6"), breaks = seq(1, 6, 1))
gg1 + facet_wrap( ~ identifier, ncol = 3) #+
# R-Script
# Analysis of listening panel
#
# Author: Christian (Doofnase) Schuler
# Date: 2022 Jan
################################################################################
runtime_total <- sum(data_done$Runtime)/6 # In ms (/6 because 1 Trial = 6 Rows)
runtime_total <- runtime_total / 1000     # In s
runtime_total <- runtime_total / 60       # In m
#runtime_total <- runtime_total / 60      # In h
#runtime_total <- runtime_total / 24      # In d
# Total runtime of entire study in minutes:
runtime_total
#### Preperations
identifier <- "all"
sink_path <- paste0("listening_panel_rank/", identifier, "-sink.txt")
options(max.print = 100000)
options(dplyr.print_max = 100000)
#### How well did they "find" the Anchros? #####################################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 0) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "High-Anchor"
#count(Rank) %>%
#group_by(Rank) %>%
#summarise(Count = n())
#data$percent <- paste(round(data$Count / sum(sexs$Count) * 100, 2), "%")
#mutate(percent = paste(round(data$n / sum(data$n) * 100, 2), "%"))
data_rank_high <- data
sink(sink_path, append = FALSE)
print("High-Anchor - Attribute = 0")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Middle-Anchor"
data_rank_mid <- data
sink(sink_path, append = TRUE)
print("Middle-Anchor - Attribute = 4 and Modification = uR")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "iL") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Low-Anchor"
data_rank_low <- data
sink(sink_path, append = TRUE)
print("Low-Anchor - Attribute = 4 and Modification = iL")
data
sink()
#### How well did they "find" the "order" of attributes? #######################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 1) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "1-Frame"
data_rank_01 <- data
sink(sink_path, append = TRUE)
print("Attribute = 1")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 2) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "2-Frames"
data_rank_02 <- data
sink(sink_path, append = TRUE)
print("Attribute = 2")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 3) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "3-Frames"
data_rank_03 <- data
sink(sink_path, append = TRUE)
print("Attribute = 3")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification != "iL") %>%
dplyr::filter(Modification != "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "4-Frames"
data_rank_04 <- data
sink(sink_path, append = TRUE)
print("Attribute = 4")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 5) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "5-Frames"
data_rank_05 <- data
sink(sink_path, append = TRUE)
print("Attribute = 5")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 6) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "6-Frames"
data_rank_06 <- data
sink(sink_path, append = TRUE)
print("Attribute = 6")
data
sink()
####################################################
#### This but depending on mod!!!/obj???/exc??? ####
####################################################
data_anchors <- rbind(data_rank_high, data_rank_mid, data_rank_low)
data_items <- rbind(data_rank_01, data_rank_02, data_rank_03, data_rank_04, data_rank_05, data_rank_06)
data_combined <- rbind(data_anchors, data_items)
#### Barely shit ####
#ggplot(data_anchors, aes(x = Rank, y = Count, color = identifier)) +
#  geom_point() + geom_smooth()
#ggplot(data_items, aes(x = Rank, y = Count, color = identifier)) +
#  geom_point() + geom_smooth()
#### Barely shit ####
gg <- ggplot(data_combined, aes(x = Rank, y = Count, color = identifier)) +
geom_point() +
labs(title = "Scatterplot", x = "Rank", y = "Count")
#### Theme adding
gg1 <- gg + theme(plot.title = element_text(size = 30, face = "bold"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25)) +
scale_color_discrete((name = "Type of PVS"))
#scale_x_discrete(breaks = c("1", "2", "3", "4", "5", "6"))
#scale_x_discrete(limits = c("1", "6"), breaks = seq(1, 6, 1))
gg1 + facet_wrap( ~ identifier, ncol = 3) #+
#scale_x_discrete(breaks = c("1", "2", "3", "4", "5", "6"), labels = c("1", "2", "3", "4", "5", "6"))
png(
file = paste0("listening_panel_rank", identifier, ".png")
)
print(gg1)
dev.off()
# R-Script
# Analysis of listening panel
#
# Author: Christian (Doofnase) Schuler
# Date: 2022 Jan
################################################################################
runtime_total <- sum(data_done$Runtime)/6 # In ms (/6 because 1 Trial = 6 Rows)
runtime_total <- runtime_total / 1000     # In s
runtime_total <- runtime_total / 60       # In m
#runtime_total <- runtime_total / 60      # In h
#runtime_total <- runtime_total / 24      # In d
# Total runtime of entire study in minutes:
runtime_total
#### Preperations
identifier <- "all"
sink_path <- paste0("listening_panel_rank/", identifier, "-sink.txt")
options(max.print = 100000)
options(dplyr.print_max = 100000)
#### How well did they "find" the Anchros? #####################################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 0) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "High-Anchor"
#count(Rank) %>%
#group_by(Rank) %>%
#summarise(Count = n())
#data$percent <- paste(round(data$Count / sum(sexs$Count) * 100, 2), "%")
#mutate(percent = paste(round(data$n / sum(data$n) * 100, 2), "%"))
data_rank_high <- data
sink(sink_path, append = FALSE)
print("High-Anchor - Attribute = 0")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Middle-Anchor"
data_rank_mid <- data
sink(sink_path, append = TRUE)
print("Middle-Anchor - Attribute = 4 and Modification = uR")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "iL") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Low-Anchor"
data_rank_low <- data
sink(sink_path, append = TRUE)
print("Low-Anchor - Attribute = 4 and Modification = iL")
data
sink()
#### How well did they "find" the "order" of attributes? #######################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 1) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "1-Frame"
data_rank_01 <- data
sink(sink_path, append = TRUE)
print("Attribute = 1")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 2) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "2-Frames"
data_rank_02 <- data
sink(sink_path, append = TRUE)
print("Attribute = 2")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 3) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "3-Frames"
data_rank_03 <- data
sink(sink_path, append = TRUE)
print("Attribute = 3")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification != "iL") %>%
dplyr::filter(Modification != "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "4-Frames"
data_rank_04 <- data
sink(sink_path, append = TRUE)
print("Attribute = 4")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 5) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "5-Frames"
data_rank_05 <- data
sink(sink_path, append = TRUE)
print("Attribute = 5")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 6) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "6-Frames"
data_rank_06 <- data
sink(sink_path, append = TRUE)
print("Attribute = 6")
data
sink()
####################################################
#### This but depending on mod!!!/obj???/exc??? ####
####################################################
data_anchors <- rbind(data_rank_high, data_rank_mid, data_rank_low)
data_items <- rbind(data_rank_01, data_rank_02, data_rank_03, data_rank_04, data_rank_05, data_rank_06)
data_combined <- rbind(data_anchors, data_items)
#### Barely shit ####
#ggplot(data_anchors, aes(x = Rank, y = Count, color = identifier)) +
#  geom_point() + geom_smooth()
#ggplot(data_items, aes(x = Rank, y = Count, color = identifier)) +
#  geom_point() + geom_smooth()
#### Barely shit ####
gg <- ggplot(data_combined, aes(x = Rank, y = Count, color = identifier)) +
geom_point() +
labs(title = "Scatterplot", x = "Rank", y = "Count")
#### Theme adding
gg1 <- gg + theme(plot.title = element_text(size = 30, face = "bold"),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25)) +
scale_color_discrete((name = "Type of PVS"))
#scale_x_discrete(breaks = c("1", "2", "3", "4", "5", "6"))
#scale_x_discrete(limits = c("1", "6"), breaks = seq(1, 6, 1))
gg1 + facet_wrap( ~ identifier, ncol = 3) #+
#scale_x_discrete(breaks = c("1", "2", "3", "4", "5", "6"), labels = c("1", "2", "3", "4", "5", "6"))
png(
file = paste0("listening_panel_rank/listening_panel_rank", identifier, ".png")
)
print(gg1)
dev.off()
# R-Script
# Analysis of listening panel
#
# Author: Christian (Doofnase) Schuler
# Date: 2022 Jan
################################################################################
runtime_total <- sum(data_done$Runtime)/6 # In ms (/6 because 1 Trial = 6 Rows)
runtime_total <- runtime_total / 1000     # In s
runtime_total <- runtime_total / 60       # In m
#runtime_total <- runtime_total / 60      # In h
#runtime_total <- runtime_total / 24      # In d
# Total runtime of entire study in minutes:
runtime_total
#### Preperations
identifier <- "all"
sink_path <- paste0("listening_panel_rank/", identifier, "-sink.txt")
options(max.print = 100000)
options(dplyr.print_max = 100000)
#### How well did they "find" the Anchros? #####################################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 0) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "High-Anchor"
#count(Rank) %>%
#group_by(Rank) %>%
#summarise(Count = n())
#data$percent <- paste(round(data$Count / sum(sexs$Count) * 100, 2), "%")
#mutate(percent = paste(round(data$n / sum(data$n) * 100, 2), "%"))
data_rank_high <- data
data <- data %>% select(Rank, Count, percent)
sink(sink_path, append = FALSE)
print("High-Anchor - Attribute = 0")
data
sink()
# R-Script
# Analysis of listening panel
#
# Author: Christian (Doofnase) Schuler
# Date: 2022 Jan
################################################################################
runtime_total <- sum(data_done$Runtime)/6 # In ms (/6 because 1 Trial = 6 Rows)
runtime_total <- runtime_total / 1000     # In s
runtime_total <- runtime_total / 60       # In m
#runtime_total <- runtime_total / 60      # In h
#runtime_total <- runtime_total / 24      # In d
# Total runtime of entire study in minutes:
runtime_total
#### Preperations
identifier <- "all"
sink_path <- paste0("listening_panel_rank/", identifier, "-sink.txt")
options(max.print = 100000)
options(dplyr.print_max = 100000)
#### How well did they "find" the Anchros? #####################################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 0) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "High-Anchor"
#count(Rank) %>%
#group_by(Rank) %>%
#summarise(Count = n())
#data$percent <- paste(round(data$Count / sum(sexs$Count) * 100, 2), "%")
#mutate(percent = paste(round(data$n / sum(data$n) * 100, 2), "%"))
data_rank_high <- data
#data <- data %>% select(Rank, Count, percent) # For slicker sink in txt
sink(sink_path, append = FALSE)
print("High-Anchor - Attribute = 0")
data
sink()
# R-Script
# Analysis of listening panel
#
# Author: Christian (Doofnase) Schuler
# Date: 2022 Jan
################################################################################
runtime_total <- sum(data_done$Runtime)/6 # In ms (/6 because 1 Trial = 6 Rows)
runtime_total <- runtime_total / 1000     # In s
runtime_total <- runtime_total / 60       # In m
#runtime_total <- runtime_total / 60      # In h
#runtime_total <- runtime_total / 24      # In d
# Total runtime of entire study in minutes:
runtime_total
#### Preperations
identifier <- "all"
sink_path <- paste0("listening_panel_rank/", identifier, "-sink.txt")
options(max.print = 100000)
options(dplyr.print_max = 100000)
#### How well did they "find" the Anchros? #####################################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 0) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "High-Anchor"
#count(Rank) %>%
#group_by(Rank) %>%
#summarise(Count = n())
#data$percent <- paste(round(data$Count / sum(sexs$Count) * 100, 2), "%")
#mutate(percent = paste(round(data$n / sum(data$n) * 100, 2), "%"))
data_rank_high <- data
#data <- data %>% select(Rank, Count, percent) # For slicker sink in txt
sink(sink_path, append = FALSE)
print("High-Anchor - Attribute = 0")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Middle-Anchor"
data_rank_mid <- data
sink(sink_path, append = TRUE)
print("Middle-Anchor - Attribute = 4 and Modification = uR")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification == "iL") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "Low-Anchor"
data_rank_low <- data
sink(sink_path, append = TRUE)
print("Low-Anchor - Attribute = 4 and Modification = iL")
data
sink()
#### How well did they "find" the "order" of attributes? #######################
################################################################################
data <- data_done %>% dplyr::filter(Attribute == 1) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "1-Frame"
data_rank_01 <- data
sink(sink_path, append = TRUE)
print("Attribute = 1")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 2) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "2-Frames"
data_rank_02 <- data
sink(sink_path, append = TRUE)
print("Attribute = 2")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 3) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "3-Frames"
data_rank_03 <- data
sink(sink_path, append = TRUE)
print("Attribute = 3")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 4) %>%
dplyr::filter(Modification != "iL") %>%
dplyr::filter(Modification != "uR") %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "4-Frames"
data_rank_04 <- data
sink(sink_path, append = TRUE)
print("Attribute = 4")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 5) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "5-Frames"
data_rank_05 <- data
sink(sink_path, append = TRUE)
print("Attribute = 5")
data
sink()
data <- data_done %>% dplyr::filter(Attribute == 6) %>%
group_by(Attribute, Rank) %>%
summarise(Count = n())
data$percent <- paste(round(data$Count / sum(data$Count) * 100, 2), "%")
data$identifier <- "6-Frames"
data_rank_06 <- data
sink(sink_path, append = TRUE)
print("Attribute = 6")
data
sink()
